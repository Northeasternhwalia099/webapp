name: Assisgnment 4

on:
  push:
    branches: ["main"]

jobs:
  packer:
    runs-on: ubuntu-latest
    name: packer

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - uses: actions/checkout@v3
      - uses: mirromutth/mysql-action@v1.1
        with:
          character set server: "utf8" # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: "utf8_general_ci" # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: "8.0" # Optional, default value is "latest". The version of the MySQL
          mysql database: "users" # Optional, default value is "test". The specified database which will be create
          mysql root password: "Xoxo@9898" # Required if "mysql user" is empty, default is empty. The root superuser password

      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: "18"
          distribution: "adopt"
          cache: maven
      - name: Build with Maven
        run: mvn clean install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY}}
          aws-region: us-east-1

      - name: Packer Init
        uses: hashicorp/packer-github-actions@master
        with:
          command: init
          target: myami.pkr.hcl

      # validate templates
      - name: Validate Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: -syntax-only
          target: myami.pkr.hcl

      # build artifact
      - name: Build Artifact
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort"
          target: myami.pkr.hcl
        env:
          PACKER_LOG: 1

      - name: passing the ami id
        run: echo "AMI_ID=$(jq -r '.builds[0].artifact_id' manifest.json | cut -d ":" -f2)" >> $GITHUB_ENV

      - name: create new instance
        run: aws ec2 create-launch-template-version --launch-template-name demo09-EC2-instance --version-description WebVersion2 --source-version 1 --launch-template-data '{"ImageId":"${{ env.AMI_ID }}"}'

      - name: xyz
        run: aws autoscaling start-instance-refresh --auto-scaling-group-name demo09-asg --strategy Rolling --desired-configuration '{"LaunchTemplate":{"LaunchTemplateName":"demo09-EC2-instance","Version":"$Latest"}}'
